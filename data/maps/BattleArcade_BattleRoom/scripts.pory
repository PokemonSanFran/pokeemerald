const ATTENDANT_ENTRANCE = 1
const ATTENDANT = 1
const OPPONENT = 2
const MC = 3
const VAR_NEED_TO_FACE_NORTH = VAR_TEMP_1
const VAR_ARCADE_EVENT = VAR_UNUSED_0x4083

const VAR_ARCADE_IMPACT_SIDE = VAR_UNUSED_0x404E

const GAME_BOARD_EVENT =  VAR_0x8007
const GAME_BOARD_IMPACT = VAR_0x8008
const GAME_BOARD_SUCCESS = VAR_0x8009

const PLAYER = OBJ_EVENT_ID_PLAYER
const CAMERA = OBJ_EVENT_ID_CAMERA

mapscripts BattleArcade_BattleRoom_MapScripts
{
    MAP_SCRIPT_ON_FRAME_TABLE
    [
        VAR_TEMP_0, 0: BattleArcade_BattleRoom_EventScript_EnterRoom
        VAR_TEMP_0, 1: BattleFrontier_RouletteRoom_EventScript_BeginChallenge
    ]
    MAP_SCRIPT_ON_WARP_INTO_MAP_TABLE
    [
        VAR_NEED_TO_FACE_NORTH, 0: BattleArcade_BattleRoom_EventScript_PlayerFaceNorth
    ]
}

script BattleArcade_BattleRoom_EventScript_PlayerFaceNorth
{
    setvar(VAR_NEED_TO_FACE_NORTH, 1)
    turnobject(PLAYER, DIR_NORTH)
    end
}

script BattleArcade_BattleRoom_EventScript_EnterRoom
{
    setvar(VAR_TEMP_0, 1)
    special(SpawnCameraObject)
    applymovement(ATTENDANT, BattleArcade_BattleRoom_WatchPlayer)
    applymovement(PLAYER, BattleArcade_BattleRoom_Player_WalkToBattlefield)
    applymovement(CAMERA, BattleArcade_BattleRoom_Camera_PanBattlefield)
    waitmovement(CAMERA)
    waitmovement(PLAYER)
    applymovement(PLAYER, BattleArcade_BattleRoom_Movement_FaceBattlefield)
    special(RemoveCameraObject)
}

script BattleArcade_BattleRoom_EventScript_SpawnOpponentEntrance
{
	call(BattleArcade_BattleRoom_EventScript_AddSetOpponent)
	frontier_isbrain
	if (var(VAR_RESULT) == TRUE)
	{
		call(BattleArcade_BattleRoom_EventScript_BrainEntranceMovement)
	}
	else
	{
		call(BattleArcade_BattleRoom_EventScript_OpponentIntro)
	}
}

script BattleArcade_BattleRoom_EventScript_MCFaceCrowd
{
    applymovement(MC,BattleFrontier_BattleArcadeBattleRoom_Movement_FaceCrowd)
    waitmovement(MC)
}

script BattleArcade_BattleRoom_EventScript_MCMoveIntoPosition
{
    applymovement(MC,BattleFrontier_BattleArcadeBattleRoom_Movement_WalkDown)
    waitmovement(MC)
}

script BattleArcade_BattleRoom_EventScript_OpponentBattleMovement
{
    applymovement(OPPONENT,Common_Movement_WalkInPlaceLeft)
    waitmovement(OPPONENT)
}

script BattleArcade_BattleRoom_EventScript_MoveBattlersIntoPosition
{
    lock
    special(SpawnCameraObject)
    applymovement(OPPONENT,BattleArcade_BattleRoom_EventScript_WalkToLeft)
    applymovement(PLAYER,BattleArcade_BattleRoom_EventScript_WalkToRight)
    waitmovement(PLAYER)
    special(RemoveCameraObject)
}

script BattleArcade_BattleRoom_EventScript_ApplyOverworldImpact
{
    switch(var(GAME_BOARD_IMPACT))
    {
        case ARCADE_IMPACT_PLAYER:
            applymovement(MC,Common_Movement_FacePlayer)
        case ARCADE_IMPACT_OPPONENT:
            applymovement(MC,Common_Movement_FaceAwayPlayer)
        case ARCADE_IMPACT_ALL:
            return
    }
    waitmovement(MC)
    delay(16)
    //arcade_playoverworldeffect
}

script BattleArcade_BattleRoom_EventScript_MoveMCToTrainer
{
	if (var(GAME_BOARD_IMPACT) == ARCADE_IMPACT_PLAYER)
	{
		applymovement(MC,BattleFrontier_BattleArcadeBattleRoom_Movement_WalkToPlayer)
	}
	else
	{
		applymovement(MC,BattleFrontier_BattleArcadeBattleRoom_Movement_WalkToOpponent)
	}
	waitmovement(MC)
}

script BattleArcade_BattleRoom_EventScript_MoveMCFromTrainer
{
	if (var(GAME_BOARD_IMPACT) == ARCADE_IMPACT_PLAYER)
	{
		applymovement(MC,BattleFrontier_BattleArcadeBattleRoom_Movement_WalkFromPlayer)
	}
	else
	{
		applymovement(MC,BattleFrontier_BattleArcadeBattleRoom_Movement_WalkFromOpponent)
	}
}

script BattleArcade_BattleRoom_EventScript_MoveMCBack
{
    if ((var(GAME_BOARD_EVENT) != ARCADE_EVENT_GIVE_BERRY) && (var(GAME_BOARD_EVENT) != ARCADE_EVENT_GIVE_ITEM))
    {
		applymovement(MC,BattleFrontier_BattleArcadeBattleRoom_Movement_MoveBack)
    }
    waitmovement(MC)
}

script BattleArcade_BattleRoom_EventScript_MoveBattlersBack
{
    special(SpawnCameraObject)
    applymovement(PLAYER,BattleArcade_BattleRoom_EventScript_ReturnPosition)
    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_OpponentReturnPosition)
    waitmovement(OPPONENT)
    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_LeaveRoom)
    waitmovement(OPPONENT)
    removeobject(OPPONENT)
    special(RemoveCameraObject)
}

script BattleArcade_BattleRoom_EventScript_HandleHealAttendantMovement
{
    addobject(ATTENDANT)
    setobjectxy(ATTENDANT,2,12)
    applymovement(ATTENDANT,BattleArcade_BattleRoom_Movement_RunToHeal)
    waitmovement(ATTENDANT)
    applymovement(PLAYER,BattleArcade_BattleRoom_Movement_FaceAttendant)
    waitmovement(PLAYER)
}

script BattleArcade_BattleRoom_EventScript_AttendantLeave
{
    applymovement(PLAYER, BattleArcade_BattleRoom_Movement_FaceBattlefield)
    applymovement(ATTENDANT,BattleArcade_BattleRoom_Movement_RunOffBattlefield)
    waitmovement(ATTENDANT)
    removeobject(ATTENDANT)
}

script BattleArcade_BattleRoom_EventScript_BrainEntranceMovement
{
    special(SpawnCameraObject)
    applymovement(OPPONENT,Common_Movement_FaceDown)
    applymovement(PLAYER,Common_Movement_FaceDown)
    applymovement(CAMERA,BattleArcade_BattleRoom_Movement_PanCameraToBrain)
    waitmovement(CAMERA)
    call(BattleArcade_BattleRoom_EventScript_BrainEntrance)
}

script BattleArcade_BattleRoom_EventScript_BrainEntrance
{
    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_BrainSpinDown360)
    waitmovement(OPPONENT)

    playse(SE_APPLAUSE)
    waitse

    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_BrainSpinDownToUp)
    waitmovement(OPPONENT)

    applymovement(CAMERA,BattleArcade_BattleRoom_Movement_BrainPanCameraToBattlefield)

    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_BrainWalkUp)
    waitmovement(OPPONENT)

    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_BrainSpinUpToRight)
    waitmovement(OPPONENT)

    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_BrainWalkRight)
    waitmovement(OPPONENT)

    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_BrainSpinRightToUp)
    waitmovement(OPPONENT)

    applymovement(PLAYER,Common_Movement_FaceRight)

    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_BrainWalkUp2)
    waitmovement(OPPONENT)

    applymovement(OPPONENT,BattleArcade_BattleRoom_Movement_BrainSpinUpToLeft)
    waitmovement(OPPONENT)

    waitmovement(OPPONENT)
    waitmovement(PLAYER)
    waitmovement(CAMERA)
	special(RemoveCameraObject)
}

script BattleArcade_BattleRoom_EventScript_AddSetOpponent
{
    addobject(OPPONENT)
    setobjectxy(OPPONENT,7,11)
}

script BattleArcade_BattleRoom_EventScript_OpponentIntro
{
	applymovement(OPPONENT,BattleFrontier_BattleArcadeBattleRoom_Movement_OpponentEnter)
	waitmovement(OPPONENT)
}

movement BattleArcade_BattleRoom_Movement_PanCameraToBrain
{
    walk_down * 4
}

movement BattleArcade_BattleRoom_Movement_BrainPanCameraToBattlefield
{
    walk_up * 4
}

movement BattleArcade_BattleRoom_Movement_BrainSpinDown360
{
    walk_in_place_right
    walk_in_place_up
    walk_in_place_left
    walk_in_place_down
}

movement BattleArcade_BattleRoom_Movement_BrainSpinDownToUp
{
    walk_in_place_right
    walk_in_place_up
    walk_in_place_left
    walk_in_place_down
    walk_in_place_right
    walk_in_place_up
}

movement BattleArcade_BattleRoom_Movement_BrainSpinUpToRight
{
    walk_in_place_left
    walk_in_place_down
    walk_in_place_right
    walk_in_place_up
    walk_in_place_left
    walk_in_place_down
    walk_in_place_right
    walk_in_place_up
    walk_in_place_left
    walk_in_place_down
    walk_in_place_right
}

movement BattleArcade_BattleRoom_Movement_BrainSpinRightToUp
{
    walk_in_place_up
    walk_in_place_left
    walk_in_place_down
    walk_in_place_right
    walk_in_place_up
}

movement BattleArcade_BattleRoom_Movement_BrainSpinUpToLeft
{
    walk_in_place_left
    walk_in_place_down
    walk_in_place_right
    walk_in_place_up
    walk_in_place_left
}

movement BattleArcade_BattleRoom_Movement_BrainWalkUp
{
    walk_up * 2
}

movement BattleArcade_BattleRoom_Movement_BrainWalkRight
{
    walk_right * 4
}

movement BattleArcade_BattleRoom_Movement_BrainWalkUp2
{
    walk_up * 3
}

movement BattleArcade_BattleRoom_Movement_BrainWalkFasterLeft
{
    walk_in_place_faster_left
}

movement BattleArcade_BattleRoom_Movement_RunOffBattlefield
{
   walk_faster_down * 5
}

movement BattleArcade_BattleRoom_Movement_FaceBattlefield
{
    walk_in_place_faster_right
}

movement BattleArcade_BattleRoom_EventScript_WalkToLeft
{
    walk_left
}

movement BattleArcade_BattleRoom_EventScript_WalkToRight
{
    walk_right
}

movement BattleFrontier_BattleArcadeBattleRoom_Movement_MoveBack
{
    walk_up
    walk_in_place_fast_down
}

movement BattleFrontier_BattleArcadeBattleRoom_Movement_FaceCrowd
{
    face_down
}

movement BattleFrontier_BattleArcadeBattleRoom_Movement_WalkDown
{
    walk_down
}

movement BattleFrontier_BattleArcadeBattleRoom_Movement_OpponentEnter
{
    walk_up * 2
    walk_right * 4
    walk_up * 3
    walk_in_place_faster_left
}

movement BattleArcade_BattleRoom_WatchPlayer
{
    delay_8
    delay_8
    face_up
}

movement BattleArcade_BattleRoom_Player_WalkToBattlefield
{
    walk_up * 8
    walk_left * 4
    walk_up * 3
}

movement BattleArcade_BattleRoom_Camera_PanBattlefield
{
    walk_up * 12
}

movement BattleArcade_BattleRoom_EventScript_ReturnPosition
{
    walk_left
    walk_in_place_right
}

movement BattleArcade_BattleRoom_Movement_OpponentReturnPosition
{
    walk_right
}

movement BattleArcade_BattleRoom_Movement_LeaveRoom
{
    walk_down * 2
    walk_left * 4
    walk_down * 3
}

movement BattleArcade_BattleRoom_Movement_RunToHeal
{
    walk_faster_up * 6
    walk_in_place_faster_right
}

movement BattleArcade_BattleRoom_Movement_FaceAttendant
{
    walk_in_place_left
}

movement BattleFrontier_BattleArcadeBattleRoom_Movement_WalkToPlayer
{
	walk_down
	walk_left * 3
}
movement BattleFrontier_BattleArcadeBattleRoom_Movement_WalkToOpponent
{
	walk_down
	walk_right * 3
}
movement BattleFrontier_BattleArcadeBattleRoom_Movement_WalkFromPlayer
{
	walk_right * 3
	walk_up * 2
    walk_in_place_fast_down
}
movement BattleFrontier_BattleArcadeBattleRoom_Movement_WalkFromOpponent
{
	walk_left * 3
	walk_up * 2
    walk_in_place_fast_down
}
